---

apiVersion: v1
kind: ConfigMap
metadata:
  name: telegraf-config
  namespace: monitoring
data:
  telegraf.conf: |+
    # Configuration for telegraf agent
    [agent]
      ## Default data collection interval for all inputs
      interval = "10s"
      ## Rounds collection interval to 'interval'
      ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
      round_interval = true

      ## Telegraf will send metrics to outputs in batches of at most
      ## metric_batch_size metrics.
      ## This controls the size of writes that Telegraf sends to output plugins.
      metric_batch_size = 1000

      ## Maximum number of unwritten metrics per output.  Increasing this value
      ## allows for longer periods of output downtime without dropping metrics at the
      ## cost of higher maximum memory usage.
      metric_buffer_limit = 10000

      ## Collection jitter is used to jitter the collection by a random amount.
      ## Each plugin will sleep for a random time within jitter before collecting.
      ## This can be used to avoid many plugins querying things like sysfs at the
      ## same time, which can have a measurable effect on the system.
      collection_jitter = "0s"

      ## Default flushing interval for all outputs. Maximum flush_interval will be
      ## flush_interval + flush_jitter
      flush_interval = "10s"
      ## Jitter the flush interval by a random amount. This is primarily to avoid
      ## large write spikes for users running a large number of telegraf instances.
      ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
      flush_jitter = "0s"

      ## By default or when set to "0s", precision will be set to the same
      ## timestamp order as the collection interval, with the maximum being 1s.
      ##   ie, when interval = "10s", precision will be "1s"
      ##       when interval = "250ms", precision will be "1ms"
      ## Precision will NOT be used for service inputs. It is up to each individual
      ## service input to set the timestamp at the appropriate precision.
      ## Valid time units are "ns", "us" (or "Âµs"), "ms", "s".
      precision = ""
      quiet = false
      hostname = ""
      omit_hostname = false

    [[outputs.influxdb]]
      urls = ["http://$INFLUXDB_HOST:8086/"]
      skip_database_creation = true
      database = "$INFLUXDB_DB"
      username = "$INFLUXDB_USER"
      password = "$INFLUXDB_USER_PASSWORD"
      timeout = "5s"
      write_consistency = "any"
      retention_policy = ""

    [[inputs.statsd]]
      protocol = "udp"
      max_tcp_connections = 250
      tcp_keep_alive = false
      service_address = ":8125"
      delete_gauges = true
      delete_counters = true
      delete_sets = true
      delete_timings = true
      metric_separator = ","
      allowed_pending_messages = 100000
      percentile_limit = 10000
      read_buffer_size = 65535
      datadog_extensions = true
      percentiles = [50.0, 90.0, 99.0, 99.9, 99.95, 100.0]
      # tagpass = ["*"]

     # Read metrics about cpu usage
     [[inputs.cpu]]
       ## Whether to report per-cpu stats or not
       percpu = true
       ## Whether to report total system cpu stats or not
       totalcpu = true
       ## Comment this line if you want the raw CPU time metrics
       fielddrop = ["time_*"]

     # Read metrics about disk usage by mount point
     [[inputs.disk]]
       ## By default, telegraf gather stats for all mountpoints.
       ## Setting mountpoints will restrict the stats to the specified mountpoints.
       # mount_points = ["/"]
       ## Ignore some mountpoints by filesystem type. For example (dev)tmpfs (usually
       ## present on /run, /var/run, /dev/shm or /dev).
       ignore_fs = ["tmpfs", "devtmpfs"]

     # Read metrics about disk IO by device
     [[inputs.diskio]]
       ## By default, telegraf will gather stats for all devices including
       ## disk partitions.
       ## Setting devices will restrict the stats to the specified devices.
       # devices = ["sda", "sdb"]
       ## Uncomment the following line if you need disk serial numbers.
       # skip_serial_number = false

     # Get kernel statistics from /proc/stat
     [[inputs.kernel]]
       # no configuration

     # Read metrics about memory usage
     [[inputs.mem]]
       # no configuration

     # Get the number of processes and group them by status
     [[inputs.processes]]
       # no configuration

     # Read metrics about swap memory usage
     [[inputs.swap]]
       # no configuration

     # Read metrics about system load & uptime
     [[inputs.system]]
       # no configuration
     # Read metrics about network interface usage
     [[inputs.net]]
       # collect data only about specific interfaces
       # interfaces = ["eth0"]

     [[inputs.netstat]]
       # no configuration
     [[inputs.interrupts]]
       # no configuration
     [[inputs.linux_sysctl_fs]]
       # no configuration

     [[inputs.http]]
       method = "GET"
